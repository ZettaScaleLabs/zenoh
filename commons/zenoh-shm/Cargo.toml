#
# Copyright (c) 2023 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
[package]
rust-version = { workspace = true }
name = "zenoh-shm"
version = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
authors = [
	"kydos <angelo@icorsaro.net>",
	"Luca Cominardi <luca.cominardi@zettascale.tech>",
	"Pierre Avital <pierre.avital@zettascale.tech>",
]
edition = { workspace = true }
license = { workspace = true }
categories = { workspace = true }
description = "Internal crate for zenoh."
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
test = ["num_cpus"]
# NOTE(fuzzypixelz): Feature "shared-memory" should be enabled by dependants. It
# is disabled by default to avoid having a zenoh-buffers crate with
# "shared-memory" feature enabled in the workspace. 
#
# This is because Cargo will then unify the zenoh-buffers crate with the
# "shared-memory" feature and the zenoh-buffers crate without the
# "shared-memory" feature. These two crates have incompatible declarations of
# the `zenoh_buffers::ZSliceBuffer` trait and thus unifying them will break at
# least non-users of the "zenoh-buffers/shared-memory" feature. 
#
# If this crate is compiled without enabling "shared-memory", it will simply
# panic at some point.
#
# https://doc.rust-lang.org/cargo/reference/features.html#feature-unification
shared-memory = ["zenoh-buffers/shared-memory"]

[dependencies]
async-trait = { workspace = true }
bincode = { workspace = true }
crc = { workspace = true }
log = { workspace = true }
serde = { workspace = true, features = ["default"] }
shared_memory = { workspace = true }
tokio = { workspace = true }
zenoh-result = { workspace = true }
zenoh-core = { workspace = true }
zenoh-macros = { workspace = true }
zenoh-buffers = { workspace = true }
rand = { workspace = true }
lazy_static = { workspace = true }
num-traits = { workspace = true }
num_cpus = { workspace = true, optional = true }
thread-priority = { workspace = true }
lockfree = { workspace = true }
stabby = { workspace = true }

[dev-dependencies]
zenoh-shm = { workspace = true, features = ["test"] }
libc = { workspace = true }
