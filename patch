diff --git a/Cargo.lock b/Cargo.lock
index 9ab35d69..10e57e6f 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -4848,6 +4848,7 @@ dependencies = [
  "env_logger",
  "flume",
  "futures",
+ "lazy_static",
  "log",
  "lz4_flex",
  "paste",
diff --git a/io/zenoh-transport/Cargo.toml b/io/zenoh-transport/Cargo.toml
index 4f7edc38..e3b705d7 100644
--- a/io/zenoh-transport/Cargo.toml
+++ b/io/zenoh-transport/Cargo.toml
@@ -75,6 +75,7 @@ zenoh-result = { workspace = true }
 zenoh-shm = { workspace = true, optional = true }
 zenoh-sync = { workspace = true }
 zenoh-util = { workspace = true }
+lazy_static = { workspace = true }
 
 [dev-dependencies]
 env_logger = { workspace = true }
diff --git a/io/zenoh-transport/src/common/pipeline.rs b/io/zenoh-transport/src/common/pipeline.rs
index 99121d5b..7be72c58 100644
--- a/io/zenoh-transport/src/common/pipeline.rs
+++ b/io/zenoh-transport/src/common/pipeline.rs
@@ -128,6 +128,17 @@ struct StageIn {
     fragbuf: ZBuf,
 }
 
+lazy_static::lazy_static! {
+    static ref ZENOH_NO_BATCHING: bool = {
+        let b = std::env::var("ZENOH_NO_BATCHING").is_ok();
+        if b {
+            log::info!("ZENOH_NO_BATCHING={b}");
+        }
+        b
+    };
+}
+
+
 impl StageIn {
     fn push_network_message(
         &mut self,
@@ -181,10 +192,15 @@ impl StageIn {
 
         macro_rules! zretok {
             ($batch:expr) => {{
-                let bytes = $batch.len();
-                *c_guard = Some($batch);
-                drop(c_guard);
-                self.s_out.notify(bytes);
+                if *ZENOH_NO_BATCHING {
+                    // Move out existing batch
+                    self.s_out.move_batch($batch);
+                } else {
+                    let bytes = $batch.len();
+                    *c_guard = Some($batch);
+                    drop(c_guard);
+                    self.s_out.notify(bytes);
+                }
                 return true;
             }};
         }
diff --git a/io/zenoh-transport/src/unicast/manager.rs b/io/zenoh-transport/src/unicast/manager.rs
index 2d8f6e87..dc745b72 100644
--- a/io/zenoh-transport/src/unicast/manager.rs
+++ b/io/zenoh-transport/src/unicast/manager.rs
@@ -572,6 +572,8 @@ impl TransportManager {
         guard.insert(config.zid, t.clone());
         drop(guard);
 
+        start_tx_rx();
+
         // Notify manager's interface that there is a new transport
         transport_error!(
             self.notify_new_transport_unicast(&t),
@@ -581,7 +583,6 @@ impl TransportManager {
         // Notify transport's callback interface that there is a new link
         Self::notify_new_link_unicast(&t, c_link);
 
-        start_tx_rx();
 
         zcondfeat!(
             "shared-memory",
